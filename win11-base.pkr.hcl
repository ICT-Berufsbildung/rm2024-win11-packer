packer {
  required_plugins {
    # see https://github.com/hashicorp/packer-plugin-proxmox
    proxmox = {
      version = "1.1.6"
      source  = "github.com/hashicorp/proxmox"
    }
    # see https://github.com/rgl/packer-plugin-windows-update
    windows-update = {
      version = "0.15.0"
      source  = "github.com/rgl/windows-update"
    }
  }
}

variable "autounattend" {
  type    = string
  default = "./scripts/Autounattend.xml"
}

variable "iso_checksum" {
  type    = string
  default = "c8dbc96b61d04c8b01faf6ce0794fdf33965c7b350eaa3eb1e6697019902945c"
}

variable "iso_url" {
  type    = string
  default = "ISO:iso/22631.2428.231001-0608.23H2_NI_RELEASE_SVC_REFRESH_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso"
}

variable "name" {
  type    = string
  default = "rm2024-win11-base"
}

variable "proxmox_node" {
  type    = string
  default = env("PROXMOX_NODE")
}

source "proxmox-iso" "autogenerated_1" {
  insecure_skip_tls_verify = true
  node              = var.proxmox_node
  template_name     = "${var.name}"
  machine           = "q35"
  cpu_type          = "host"
  cores             = "4"
  memory            = "8192"
  bios                     = "ovmf"
  efi_config {
    efi_storage_pool = "local-lvm"
  }
  vga {
    type   = "qxl"
    memory = 32
  }
  network_adapters {
    model  = "virtio"
    bridge = "vmbr0"
  }
  scsi_controller = "virtio-scsi-single"
  disks {
    format        = "raw"
    type         = "scsi"
    io_thread    = true
    ssd          = true
    discard      = true
    disk_size    = "61440M"
    storage_pool = "local-lvm"
  }
  unmount_iso      = true
  additional_iso_files {
    device           = "ide0"
    unmount          = true
    iso_storage_pool = "local"
    cd_label         = "PROVISION"
    cd_files = [
      "${var.autounattend}", 
      "drivers/NetKVM/w11/amd64/*.cat",
      "drivers/NetKVM/w11/amd64/*.inf",
      "drivers/NetKVM/w11/amd64/*.sys",
      "drivers/qxldod/w11/amd64/*.cat",
      "drivers/qxldod/w11/amd64/*.inf",
      "drivers/qxldod/w11/amd64/*.sys",
      "drivers/vioscsi/w11/amd64/*.cat",
      "drivers/vioscsi/w11/amd64/*.inf",
      "drivers/vioscsi/w11/amd64/*.sys",
      "drivers/vioserial/w11/amd64/*.cat",
      "drivers/vioserial/w11/amd64/*.inf",
      "drivers/vioserial/w11/amd64/*.sys",
      "drivers/viostor/w11/amd64/*.cat",
      "drivers/viostor/w11/amd64/*.inf",
      "drivers/viostor/w11/amd64/*.sys",
      "drivers/virtio-win-guest-tools.exe",
      "scripts/provision-autounattend.ps1",
      "scripts/provision-guest-tools-qemu-kvm.ps1",
      "scripts/provision-openssh.ps1",
      "scripts/provision-psremoting.ps1",
      "scripts/provision-pwsh.ps1",
      "scripts/provision-winrm.ps1",
    ]
  }
  os     = "win11"
  http_directory    = "httpdir"
  iso_checksum      = "${var.iso_checksum}"
  iso_file           = "${var.iso_url}"
  ssh_password = "Go4Regio24"
  ssh_timeout  = "1h"
  ssh_username = "vagrant"
  boot_wait         = "1s"
  boot_command   = ["<up><wait><up><wait><up><wait><up><wait><up><wait><up><wait><up><wait><up><wait><up><wait><up><wait>"]
}

build {
  sources = ["source.proxmox-iso.autogenerated_1"]

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/disable-windows-updates.ps1"
  }

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/disable-windows-defender.ps1"
  }

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/remove-one-drive.ps1"
  }

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/remove-apps.ps1"
  }

  provisioner "windows-restart" {
  }

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/provision.ps1"
  }

  provisioner "windows-update" {
  }

  provisioner "powershell" {
    use_pwsh = true
    script   = "scripts/enable-remote-desktop.ps1"
  }

}